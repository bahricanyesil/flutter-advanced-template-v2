name: flutter_advanced_template_v2
repository: https://github.com/bahricanyesil/flutter-advanced-template-v2

packages:
  - packages/*
  - packages/*/*
  - packages/*/*/*
  - packages/*/packages/*
  - packages/**/example

command:
  version:
    linkToCommits: true
    workspaceChangelog: false
  bootstrap:
    hooks:
      post: melos run format

scripts:
  format: |
    dart format --set-exit-if-changed --line-length 80 .

  analyze: |
    dart analyze --fatal-infos --fatal-warnings

  format-analyze: |
    melos run format && melos run analyze

  test: >
    melos run test:dart &&
    melos run test:flutter
  test:dart: >
    melos exec --no-flutter --concurrency=1 --fail-fast --dir-exists=test -- "
      dart test --coverage=coverage &&
      dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/lcov.info -i ./coverage
    "
  test:flutter: melos exec --flutter --concurrency=1 --fail-fast --dir-exists=test -- flutter test --coverage

  open-coverage: |
    original_dir=$(pwd)
    for dir in packages/*/coverage; do \
      if [ -f "$dir/lcov.info" ]; then \
        parent_dir=$(dirname "$dir"); \
        echo "Processing $parent_dir"; \
        cd "$parent_dir"; \
        mkdir -p coverage/html; \
        genhtml ./coverage/lcov.info -o coverage && open coverage/index.html; \
        cd "$original_dir"; \
      else \
        echo "No lcov.info found in $dir"; \
      fi; \
    done

  test-coverage: |
    melos run test
    echo "Tests completed. Opening coverage reports..."
    melos run open-coverage

  generate: |
    echo "Checking for build_runner availability..."
    if dart pub global list | grep -q "build_runner"; then
      echo "build_runner is available. Running code generation..."
      dart run build_runner build --delete-conflicting-outputs
    else
      echo "Error: build_runner is not available. Please ensure it's installed in your project."
      exit 1
    fi