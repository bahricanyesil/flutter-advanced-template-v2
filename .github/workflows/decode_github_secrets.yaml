name: Decode and Configure Github Secrets

on:
  workflow_call:
    inputs:
      working_directory:
        required: false
        type: string
        default: "."
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"

jobs:
  decode-secrets:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🔐 Decode and Configure Firebase
        env:
          FIREBASE_OPTIONS_PROD: ${{ secrets.FIREBASE_OPTIONS_PROD }}
          FIREBASE_OPTIONS_DEV: ${{ secrets.FIREBASE_OPTIONS_DEV }}
          FIREBASE_OPTIONS_STAGE: ${{ secrets.FIREBASE_OPTIONS_STAGE }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          GOOGLE_SERVICES_JSON_PROD: ${{ secrets.GOOGLE_SERVICES_JSON_PROD }}
          GOOGLE_SERVICES_JSON_DEV: ${{ secrets.GOOGLE_SERVICES_JSON_DEV }}
          GOOGLE_SERVICES_JSON_STAGE: ${{ secrets.GOOGLE_SERVICES_JSON_STAGE }}
          IOS_FIREBASE_APP_ID: ${{ secrets.IOS_FIREBASE_APP_ID }}
          IOS_FIREBASE_APP_ID_PROD: ${{ secrets.IOS_FIREBASE_APP_ID_PROD }}
          IOS_FIREBASE_APP_ID_DEV: ${{ secrets.IOS_FIREBASE_APP_ID_DEV }}
          IOS_FIREBASE_APP_ID_STAGE: ${{ secrets.IOS_FIREBASE_APP_ID_STAGE }}
          IOS_GOOGLE_SERVICE_PLIST: ${{ secrets.IOS_GOOGLE_SERVICE_PLIST }}
          IOS_GOOGLE_SERVICE_PLIST_PROD: ${{ secrets.IOS_GOOGLE_SERVICE_PLIST_PROD }}
          IOS_GOOGLE_SERVICE_PLIST_DEV: ${{ secrets.IOS_GOOGLE_SERVICE_PLIST_DEV }}
          IOS_GOOGLE_SERVICE_PLIST_STAGE: ${{ secrets.IOS_GOOGLE_SERVICE_PLIST_STAGE }}
          MACOS_FIREBASE_APP_ID: ${{ secrets.MACOS_FIREBASE_APP_ID }}
          MACOS_FIREBASE_APP_ID_PROD: ${{ secrets.MACOS_FIREBASE_APP_ID_PROD }}
          MACOS_FIREBASE_APP_ID_DEV: ${{ secrets.MACOS_FIREBASE_APP_ID_DEV }}
          MACOS_FIREBASE_APP_ID_STAGE: ${{ secrets.MACOS_FIREBASE_APP_ID_STAGE }}
          MACOS_GOOGLE_SERVICE_PLIST: ${{ secrets.MACOS_GOOGLE_SERVICE_PLIST }}
          MACOS_GOOGLE_SERVICE_PLIST_PROD: ${{ secrets.MACOS_GOOGLE_SERVICE_PLIST_PROD }}
          MACOS_GOOGLE_SERVICE_PLIST_DEV: ${{ secrets.MACOS_GOOGLE_SERVICE_PLIST_DEV }}
          MACOS_GOOGLE_SERVICE_PLIST_STAGE: ${{ secrets.MACOS_GOOGLE_SERVICE_PLIST_STAGE }}
          ENV: ${{ secrets.ENV }}
          ENV_STAGE: ${{ secrets.ENV_STAGE }}
          ENV_DEV: ${{ secrets.ENV_DEV }}
        run: |
          if [ -z "${ENV}" ]; then
            echo "ENV is null, using ENV_PROD: ${{ secrets.ENV_PROD }}"
            export ENV=${{ secrets.ENV_PROD }}
          fi

          decode_and_configure() {
            echo "Before decoding $2..."
            if [ -n "$1" ]; then
              echo "Decoding and configuring $2..."
              dir=$(dirname "$2")
              mkdir -p "$dir" || { echo "Failed to create directory $dir"; exit 1; }
              echo "$1" | base64 --decode > "$2" || { echo "Failed to decode and configure $2"; exit 1; }
            else
              echo "Variable is empty. Skipping decoding for $2."
            fi
          }

          decode_and_configure "$FIREBASE_OPTIONS_PROD" "lib/firebase_options_prod.dart"
          decode_and_configure "$FIREBASE_OPTIONS_DEV" "lib/firebase_options_dev.dart"
          decode_and_configure "$FIREBASE_OPTIONS_STAGE" "lib/firebase_options_stage.dart"
          decode_and_configure "$GOOGLE_SERVICES_JSON" "android/app/google-services.json"
          decode_and_configure "$GOOGLE_SERVICES_JSON_PROD" "android/app/src/prod/google-services.json"
          decode_and_configure "$GOOGLE_SERVICES_JSON_DEV" "android/app/src/dev/google-services.json"
          decode_and_configure "$GOOGLE_SERVICES_JSON_STAGE" "android/app/src/stage/google-services.json"
          decode_and_configure "$IOS_FIREBASE_APP_ID" "ios/firebase_app_id_file.json"
          decode_and_configure "$IOS_FIREBASE_APP_ID_PROD" "ios/config/prod/firebase_app_id_file.json"
          decode_and_configure "$IOS_FIREBASE_APP_ID_DEV" "ios/config/dev/firebase_app_id_file.json"
          decode_and_configure "$IOS_FIREBASE_APP_ID_STAGE" "ios/config/stage/firebase_app_id_file.json"
          decode_and_configure "$IOS_GOOGLE_SERVICE_PLIST" "ios/Runner/GoogleService-Info.plist"
          decode_and_configure "$IOS_GOOGLE_SERVICE_PLIST_PROD" "ios/config/prod/GoogleService-Info.plist"
          decode_and_configure "$IOS_GOOGLE_SERVICE_PLIST_DEV" "ios/config/dev/GoogleService-Info.plist"
          decode_and_configure "$IOS_GOOGLE_SERVICE_PLIST_STAGE" "ios/config/stage/GoogleService-Info.plist"
          decode_and_configure "$MACOS_FIREBASE_APP_ID" "macos/firebase_app_id_file.json"
          decode_and_configure "$MACOS_FIREBASE_APP_ID_PROD" "macos/config/prod/firebase_app_id_file.json"
          decode_and_configure "$MACOS_FIREBASE_APP_ID_DEV" "macos/config/dev/firebase_app_id_file.json"
          decode_and_configure "$MACOS_FIREBASE_APP_ID_STAGE" "macos/config/stage/firebase_app_id_file.json"
          decode_and_configure "$MACOS_GOOGLE_SERVICE_PLIST" "macos/Runner/GoogleService-Info.plist"
          decode_and_configure "$MACOS_GOOGLE_SERVICE_PLIST_PROD" "macos/config/prod/GoogleService-Info.plist"
          decode_and_configure "$MACOS_GOOGLE_SERVICE_PLIST_DEV" "macos/config/dev/GoogleService-Info.plist"
          decode_and_configure "$MACOS_GOOGLE_SERVICE_PLIST_STAGE" "macos/config/stage/GoogleService-Info.plist"
          decode_and_configure "$ENV" ".env"
          decode_and_configure "$ENV_STAGE" ".env.stage"
          decode_and_configure "$ENV_DEV" ".env.dev"

      - name: Upload Files as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-secret-files
          path: |
            **/firebase_options*.dart
            **/google-services.json
            **/firebase_app_id_file.json
            **/GoogleService-Info.plist
            *.env
            .env.*
